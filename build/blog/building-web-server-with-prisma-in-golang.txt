2:I[2200,["746","static/chunks/746-92b327bb6f5043d2.js","308","static/chunks/app/blog/%5Bslug%5D/page-ae472e4be9c83056.js"],"default"]
4:I[9275,[],""]
6:I[1343,[],""]
7:I[8546,["502","static/chunks/502-6cc24f17eb40f474.js","185","static/chunks/app/layout-9a90c48ce4220e65.js"],"ThemeProvider"]
8:I[2775,["502","static/chunks/502-6cc24f17eb40f474.js","185","static/chunks/app/layout-9a90c48ce4220e65.js"],"default"]
3:Tcc3,
# Introduction

In this tutorial, we will explore how to build a web server using Prisma in Golang. Prisma is a powerful ORM (Object-Relational Mapping) tool that allows us to interact with our database using a simple and intuitive API. Golang is a popular programming language known for its concurrency and performance capabilities.

# Prerequisites

* Go (Golang) installed on your machine
* A code editor or IDE of your choice
* A database of your choice (e.g. PostgreSQL, MySQL, SQLite)

## Step 1: Install Prisma

To install Prisma, open your terminal and run the following command:
```
go get -u github.com/prisma/prisma@v2.15.0
```
This will download the Prisma package and its dependencies.

## Step 2: Create a new Golang project

Create a new directory for your project and navigate into it:
```
mkdir my-web-server
cd my-web-server
```
Then, create a new Golang file called `main.go`:
```
touch main.go
```
## Step 3: Initialize Prisma

To initialize Prisma, run the following command:
```
prisma init
```
This will create a new directory called `prisma` and populate it with the necessary files.

## Step 4: Define your database schema

In the `prisma/schema.prisma` file, define your database schema using Prisma's schema language. For example:
```
model User {
  id       String   @id @default(cuid())
  name     String
  email    String   @unique
  password String
}
```
This defines a `User` model with four fields: `id`, `name`, `email`, and `password`.

## Step 5: Generate Prisma client

Run the following command to generate the Prisma client:
```
prisma generate
```
This will create a new directory called `generated` and populate it with the necessary files.

## Step 6: Write your web server

In your `main.go` file, import the Prisma client and write your web server code. 
For example:

```go
package main

import (
	"fmt"
	"log"
	"net/http"

	"github.com/prisma/prisma-client-go/runtime/transaction"
	"github.com/prisma/prisma-client-go/runtime/types"
	"github.com/your_username/your_prisma_project/prisma" // Adjust import according to your project
)

func main() {
	// Initialize the Prisma client
	client := prisma.NewClient()
	if err := client.Connect(); err != nil {
		log.Fatal(err)
	}
	defer client.Disconnect()

	// Create a new user
	user := client.User.CreateOne(
		prisma.User.Name.Set("John Doe"),
		prisma.User.Email.Set("johndoe@example.com"),
		prisma.User.Password.Set("password123"),
	).Exec(context.Background())

	if err := user.Err(); err != nil {
		log.Fatal(err)
	}

	// Start the web server
	http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
		fmt.Fprint(w, "Hello, World!")
	})
	http.ListenAndServe(":8080", nil)
}

```

This code initializes the Prisma client, connects to the database, creates a new user, and starts a web server that listens on port 8080.

# Conclusion

In this tutorial, we have learned how to build a web server using Prisma in Golang. We have covered the steps to install Prisma, initialize it, define our database schema, generate the Prisma client, and write our web server code. With this knowledge, you can now build your own web servers using Prisma in Golang.5:["slug","building-web-server-with-prisma-in-golang","d"]
0:["hu1rEVqeQ959Dx5sQpZVe",[[["",{"children":["blog",{"children":[["slug","building-web-server-with-prisma-in-golang","d"],{"children":["__PAGE__?{\"slug\":\"building-web-server-with-prisma-in-golang\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","building-web-server-with-prisma-in-golang","d"],{"children":["__PAGE__",{},[["$L1",["$","main",null,{"className":"flex justify-center w-full ","children":["$","article",null,{"className":"prose prose-sm sm:prose-base  dark:prose-invert w-full px-3 sm:px-0","children":[["$","img",null,{"src":"https://zco-wp-staging.s3-accelerate.amazonaws.com/wp-content/uploads/2020/12/21132754/Go-for-Web-Servers.png","className":"rounded-lg w-full aspect-video object-cover"}],["$","$L2",null,{"content":"$3"}]]}]}]],null],null]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$5","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/00412b0bf6df8839.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"/logo.svg"}],["$","link",null,{"rel":"mask-icon","href":"/logo.svg","color":"#000000"}]]}],["$","body",null,{"className":"min-h-screen bg-background font-sans antialiased __variable_7df6af","children":["$","$L7",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":[["$","$L8",null,{}],["$","main",null,{"className":"pt-20 min-h-screen","children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","footer",null,{"className":"z-20 w-full mt-6 p-4 border-t  shadow md:flex md:items-center md:justify-between md:p-6 bg-background","children":[["$","span",null,{"className":"text-sm text-gray-500 sm:text-center dark:text-gray-400","children":["© 2024 ",["$","a",null,{"href":"https://flowbite.com/","className":"hover:underline","children":"MMBlog"}],". All Rights Reserved."]}],["$","ul",null,{"className":"flex flex-wrap items-center mt-3 text-sm font-medium text-gray-500 dark:text-gray-400 sm:mt-0","children":[["$","li",null,{"children":["$","a",null,{"href":"/about","className":"hover:underline me-4 md:me-6","children":"About"}]}],["$","li",null,{}],["$","li",null,{}]]}]]}]]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/6bf988cd2fe52eb2.css","precedence":"next","crossOrigin":"$undefined"}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"MMBlog  ⋅ Building a Web Server with Prisma in golang"}],["$","meta","3",{"name":"description","content":"Generated by create next app"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
